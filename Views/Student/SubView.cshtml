@model Pautas.Models.Profesor.Folder

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <title>@Model.Name</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
</head>
<body>
    <style>
        .card-body {
            flex: 1 1 auto;
            min-height: 1px;
            padding: 0rem;
        }

    </style>
    <div class="container-fluid mt-1">

        <h1>@ViewBag.name</h1>

        <!-- Contenedor que no se vea solo para Telefonos y Tablets -->
        <div class="d-none d-md-flex align-items-center mb-4">
            <a class="mr-3" asp-action="Index" asp-controller="Student">
                <i class="bi bi-arrow-left-circle-fill" style="color: #7271a7; font-size: 30px;"></i>
            </a>

    
        </div>

        <!-- Contenedor que se vea solo para Telefonos y Tablets -->
        <div class="d-flex align-items-center mb-4 d-md-none">
            <a class="mr-3" asp-action="Index" asp-controller="Student">
                <i class="bi bi-arrow-left-circle-fill" style="color: #7271a7; font-size: 30px;"></i>
            </a>

            <button class="btn btn-primary d-flex align-items-center" onclick="openCreateFolderModal(@Model.Id)">
                <i class="bi bi-folder-plus mr-2"></i>
                Crear
            </button>
            <button class="btn btn-primary ml-3 d-flex align-items-center" onclick="openUploadFileModal(@Model.Id)">
                <i class="bi bi-file-earmark-arrow-up mr-2"></i>
                Subir
            </button>
        </div>

        <div class="row justify-content-center text-center">
            @foreach (var subFolder in Model.SubFolders)
            {
                // Determinar el color del borde basado en el Id
                string borderColorClass = ViewBag.id_level switch
                {
                    1 => "border-left-warning",   // Amarillo nivel 1
                    2 => "border-left-success",   // Verde nivel 2
                    3 => "border-left-info",      // Celeste nivel 3

                    _ => "border-left-secondary"  // Color predeterminado si Id no coincide
                };

                string backgroundColorClass = ViewBag.id_level switch
                {
                    1 => "text-warning",   // Amarillo nivel 1
                    2 => "text-success",   // Verde nivel 2
                    3 => "text-info",      // Celeste nivel 3

                    _ => "text-secondary"  // Color predeterminado si Id no coincide
                };
                <div class="col-xl-4 col-md-6 mb-4">
                    <div class="card @borderColorClass shadow h-100 py-2">
                        <div class="card-body">
                            <div class="row no-gutters align-items-center">
                                <div class="col">
                                    <i class="bi bi-folder-fill display-5 display-5-cell @backgroundColorClass"></i>
                                </div>
                                <a class="pl-3 pr-3" style="text-decoration: none;" href="@Url.Action("SubView", "Student", new { id = subFolder.Id, Nivel = ViewBag.id_level })">
                                    <div class="col mr-2">
                                        <div class="font-weight-bold text-secondary fs-6 text-uppercase mb-1" id="@subFolder.Id">
                                            @subFolder.Name
                                        </div>

                                    </div>
                                </a>

                                <div class="col">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="border-top my-3"></div>
        <div class="row">
            @foreach (var file in Model.Files)
            {

                string borderColorClass = @ViewBag.id_level switch
                {
                    1 => "border-left-warning",   // Amarillo nivel 1
                    2 => "border-left-success",   // Verde nivel 2
                    3 => "border-left-info",      // Celeste nivel 3

                    _ => "border-left-secondary"  // Color predeterminado si Id no coincide
                };
                <div class="col-lg-3 col-6 mb-4">
                    <div class="card h-100">
                        <div class="card-header  @borderColorClass ">
                            <div class="row align-items-center">
                                <div class="col-10">
                                    <span class="text-dark titulo_card_file">
                                        @file.Name
                                    </span>
                                </div>
                                <div class="dropdown col-2 text-right">

                                    <!-- Icono de 3 puntos como activador del dropdown -->
                                    <i class="bi-three-dots-vertical" id="dropdownMenuButton@subFolder.Id" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="cursor: pointer; font-size: 20px;"></i>

                                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton@subFolder.Id">

                                        <!-- Opción para ver el archivo según su tipo -->
                                        @if (file.Name.EndsWith(".jpeg") || file.Name.EndsWith(".png") || file.Name.EndsWith(".jpg"))
                                        {
                                            <a class="dropdown-item @borderColorClass" href="~/uploads/@Uri.EscapeDataString(file.Name)" target="_blank">
                                                <i class="bi bi-eye-fill pr-2 text-primary"></i> Ver
                                            </a>
                                            <a class="dropdown-item @borderColorClass" href="@Url.Action("DownloadFile", "Student", new { id = file.Id })">
                                                <i class="bi bi-download pr-2"></i> Descargar
                                            </a>
                                        }
                                        @if (file.Name.EndsWith(".pdf"))
                                        {
                                            <a class="dropdown-item" href="~/uploads/@file.Name" target="_blank">
                                                <i class="bi bi-file-earmark-text-fill pr-2 text-primary"></i> Ver
                                            </a>
                                            <a class="dropdown-item" href="@Url.Action("DownloadFile", "Student", new { id = file.Id })">
                                                <i class="bi bi-download pr-2"></i> Descargar
                                            </a>
                                        }
                                        @if (file.Name.EndsWith(".docx") || file.Name.EndsWith(".doc"))
                                        {
                                            <a class="dropdown-item" href="@Url.Action("DownloadFile", "Student", new { id = file.Id })">
                                                <i class="bi bi-file-earmark-text-fill pr-2" style="color: #004aad"></i> Descargar
                                            </a>
                                        }
                                        @if (file.Name.EndsWith(".pptx") || file.Name.EndsWith(".ppt"))
                                        {
                                            <a class="dropdown-item" href="@Url.Action("DownloadFile", "Student", new { id = file.Id })">
                                                <i class="bi bi-file-earmark-text-fill pr-2" style="color: #fd5050"></i> Descargar
                                            </a>
                                        }
                                        @if (file.Name.EndsWith(".xlsx") || file.Name.EndsWith(".xls"))
                                        {
                                            <a class="dropdown-item" href="@Url.Action("DownloadFile", "Student", new { id = file.Id })">
                                                <i class="bi bi-file-earmark-text-fill pr-2" style="color: #5e8d49"></i> Descargar
                                            </a>
                                        }
                                        @if (file.Name.EndsWith(".mp4") || file.Name.EndsWith(".mov") || file.Name.EndsWith(".avi") || file.Name.EndsWith(".mkv"))
                                        {
                                            <a class="dropdown-item" href="~/uploads/@Uri.EscapeDataString(file.Name)" target="_blank">
                                                <i class="bi bi-eye-fill text-primary pr-2"></i> Ver
                                            </a>
                                            <a class="dropdown-item" href="@Url.Action("DownloadFile", "Student", new { id = file.Id })">
                                                <i class="bi bi-download pr-2"></i> Descargar
                                            </a>
                                        }

                                    </div>
                                </div>


                            </div>

                        </div>



                        <div class="card-body d-flex justify-content-center align-items-center" style="min-height: 122px;">
                            <div class="text-center">
                                @if (file.Name.EndsWith(".pdf"))
                                {
                                    <!-- Mostrar PDF incrustado con vista previa -->
                                    <embed src="~/uploads/@file.Name" type="application/pdf" width="100%" height="200px" />
                                }
                                else if (file.Name.EndsWith(".docx") || file.Name.EndsWith(".doc"))
                                {
                                    <!-- Mostrar ícono de archivo de Word -->
                                    <i class="bi bi-filetype-doc" style="font-size: 80px; color: #004aad"></i>
                                }
                                else if (file.Name.EndsWith(".pptx") || file.Name.EndsWith(".ppt"))
                                {
                                    <!-- Mostrar ícono de archivo de PowerPoint -->
                                    <i class="bi bi-filetype-ppt" style="font-size: 80px; color: #fd5050"></i>
                                }
                                else if (file.Name.EndsWith(".xlsx") || file.Name.EndsWith(".xls"))
                                {
                                    <!-- Mostrar ícono de archivo de Excel -->
                                    <i class="bi bi-filetype-xls" style="font-size: 80px; color: #5e8d49"></i>
                                }
                                else if (file.Name.EndsWith(".mp4") || file.Name.EndsWith(".mov") || file.Name.EndsWith(".avi") || file.Name.EndsWith(".mkv"))
                                {
                                    <!-- Mostrar reproductor de video con vista previa -->
                                    <video controls id="responsive-video">
                                        <source src="@Url.Content("~/uploads/" + file.Name)" type="video/mp4" />
                                        <source src="@Url.Content("~/uploads/" + file.Name)" type="video/webm" />
                                        <source src="@Url.Content("~/uploads/" + file.Name)" type="video/mkv" />
                                        Tu navegador no soporta la reproducción de videos.
                                    </video>


                                }
                                else
                                {
                                    <!-- Mostrar imagen con un modal al hacer clic -->
                                    <img class="text-center justify-content-center d-flex mx-auto" style="width: 50%; cursor: pointer;"
                                         src="~/uploads/@Uri.EscapeDataString(file.Name)" data-toggle="modal" data-target="#imageModal_@file.Id">


                                }
                            </div>
                        </div>
                        @* <div class="card-footer">
                    @if (file.Name.EndsWith(".jpeg") || file.Name.EndsWith(".png") || file.Name.EndsWith(".jpg"))
                    {
                    <i class="bi bi-image pr-2 text-danger" style="font-size: 20px;"></i>
                    <a href="~/uploads/@Uri.EscapeDataString(file.Name)" class="btn btn-primary" target="_blank"><i class="bi bi-eye-fill"></i></a>
                    <a href="@Url.Action("DownloadFile", "Student", new { id = file.Id })" class="ml-2 btn btn-secondary"><i class="bi bi-download"></i></a>
                    }
                    @if (file.Name.EndsWith(".pdf"))
                    {
                    <i class="bi bi-file-earmark-text-fill pr-2 text-danger" style="font-size: 20px;"></i>
                    <a href="~/uploads/@file.Name" class="btn btn-primary" target="_blank"><i class="bi bi-eye-fill"></i></a>
                    <a href="@Url.Action("DownloadFile", "Student", new { id = file.Id })" class="ml-2 btn btn-secondary"><i class="bi bi-download"></i></a>
                    <a href="@Url.Action("DeleteFile", "Student", new { id = file.Id })" class="ml-2 btn btn-danger"><i class="bi bi-trash-fill"></i></a>
                    }
                    @if (file.Name.EndsWith(".docx") || file.Name.EndsWith(".doc"))
                    {
                    <i class="bi bi-file-earmark-text-fill" style="font-size: 20px; color: #004aad"></i>
                    <a href="@Url.Action("DownloadFile", "Student", new { id = file.Id })" class="ml-2 btn btn-secondary"><i class="bi bi-download"></i></a>
                    <a href="@Url.Action("DeleteFile", "Student", new { id = file.Id })" class="ml-2 btn btn-danger"><i class="bi bi-trash-fill"></i></a>
                    }
                    @if (file.Name.EndsWith(".pptx") || file.Name.EndsWith(".ppt"))
                    {
                    <i class="bi bi-file-earmark-text-fill" style="font-size: 20px; color: #fd5050"></i>
                    <a href="@Url.Action("DownloadFile", "Student", new { id = file.Id })" class="ml-2 btn btn-secondary"><i class="bi bi-download"></i></a>
                    <a href="@Url.Action("DeleteFile", "Student", new { id = file.Id })" class="ml-2 btn btn-danger"><i class="bi bi-trash-fill"></i></a>
                    }
                    @if (file.Name.EndsWith(".xlsx") || file.Name.EndsWith(".xls"))
                    {
                    <i class="bi bi-file-earmark-text-fill" style="font-size: 20px; color: #5e8d49"></i>
                    <a href="@Url.Action("DownloadFile", "Student", new { id = file.Id })" class="ml-2 btn btn-secondary"><i class="bi bi-download"></i></a>
                    <a href="@Url.Action("DeleteFile", "Student", new { id = file.Id })" class="ml-2 btn btn-danger"><i class="bi bi-trash-fill"></i></a>
                    }
                    @if (file.Name.EndsWith(".mp4") || file.Name.EndsWith(".mov") || file.Name.EndsWith(".avi") || file.Name.EndsWith(".mkv"))
                    {
                    <i class="bi bi-film" style="font-size: 20px; color: #70410a"></i>
                    <a href="@Url.Action("DownloadFile", "Student", new { id = file.Id })" class="ml-2 btn btn-secondary"><i class="bi bi-download"></i></a>
                    <a href="#" onclick="DeleteFile(@file.Id, @ViewBag.id_level); return false;" class="ml-2 btn btn-danger">
                    <i class="bi bi-trash-fill"></i>
                    </a>
                    <a href="~/uploads/@Uri.EscapeDataString(file.Name)" class="btn btn-primary" target="_blank"><i class="bi bi-eye-fill"></i></a>



                    }
                    </div> *@
                    </div>
                </div>


                <div class="modal fade" id="videoModal_@file.Id" tabindex="-1" role="dialog" aria-labelledby="videoModalLabel_@file.Id" aria-hidden="true">
                    <div class="modal-dialog modal-lg" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="videoModalLabel_@file.Id">@file.Name</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <video controls width="100%">
                                    <source src="@Url.Content("~/uploads/" + file.Name)" type="video/mp4" />
                                    Tu navegador no soporta la reproducción de videos.
                                </video>
                            </div>
                        </div>
                    </div>
                </div>

                <script>
                    $(document).ready(function () {
                        // Reproducir el video al abrir el modal
                        $('#videoModal_@file.Id').on('shown.bs.modal', function () {
                            var video = $(this).find('video')[0];
                            video.play();
                        });

                        // Pausar y reiniciar el video al cerrar el modal
                        $('#videoModal_@file.Id').on('hidden.bs.modal', function () {
                            var video = $(this).find('video')[0];
                            video.pause();
                            video.currentTime = 0;
                        });
                    });
                </script>
                <!-- Modal para previsualizar imagen -->
                <div class="modal fade" id="imageModal_@file.Id" tabindex="-1" role="dialog" aria-labelledby="imageModalLabel_@file.Id" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="imageModalLabel_@file.Id">@file.Name</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <img src="~/uploads/@Uri.EscapeDataString(file.Name)" class="img-fluid" />
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>


    <!-- Modal para crear subcarpeta -->
    <div id="createFolderModal" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Crear Carpeta</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="createFolderForm" method="post" action="@Url.Action("CreateSubFolder", "Student")">
                        <div class="form-group">
                            <label for="folderName">Nombre de la Carpeta</label>
                            <input type="text" class="form-control" id="folderName" name="Name" required />
                        </div>
                        <input type="hidden" name="ParentFolderId" value="@ViewBag.ParentFolderId" id="ParentFolderId" />
                        <input type="hidden" name="Id" value="@ViewBag.Id" id="Id" />
                        <input type="hidden" name="Id_level_reference" value="@ViewBag.id_level" />

                        <input type="hidden" name="Id_Folders_level" value="@Model.Id_Folders_level" />

                        <button type="submit" class="btn btn-primary">Crear</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para subir archivo -->
    <div id="uploadFileModal" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Subir Archivo</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="uploadFileForm" method="post" action="@Url.Action("UploadSubFile", "Student")" enctype="multipart/form-data">
                        <div class="form-group">
                            <label for="fileName">Archivo</label>
                            <input type="file" class="form-control" id="fileName" name="file" required />
                        </div>


                        <input type="hidden" id="Id" name="Id" value="@ViewBag.Id " />
                        <input type="hidden" id="nivel" name="nivel" value="@ViewBag.id_level" />

                        @*                         <input type="hidden" name="FolderId" value="@Model.Id" />
                        *@                        <button type="submit" class="btn btn-primary">Subir</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para renombrar file -->
    <div class="modal fade" id="renameFileModal" tabindex="-1" role="dialog" aria-labelledby="renameFileModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="renameFileModalLabel">Renombrar archivo</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="renameFileForm">
                        <input type="hidden" id="renameFileId" name="id" />
                        <input type="hidden" id="nivel" name="nivel" value="@ViewBag.id_level" />
                        <div class="form-group">
                            <label for="renameFolderName">Nuevo Nombre</label>
                            <input type="text" class="form-control" id="renameFileName" name="name" required />
                        </div>
                        <button type="submit" class="btn btn-primary">Renombrar</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para renombrar carpeta -->
    <div class="modal fade" id="renameFolderModal" tabindex="-1" role="dialog" aria-labelledby="renameFolderModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="renameFolderModalLabel">Renombrar Carpeta</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="renameFolderForm">
                        <input type="hidden" id="renameFolderId" name="id" />
                        <input type="hidden" id="nivel" name="nivel" value="@ViewBag.id_level" />
                        <div class="form-group">
                            <label for="renameFolderName">Nuevo Nombre</label>
                            <input type="text" class="form-control" id="renameFolderName" name="name" required />
                        </div>
                        <button type="submit" class="btn btn-primary">Renombrar</button>
                    </form>
                </div>
            </div>
        </div>
    </div>


    <script src="~/js/jquery.min.js"></script>
    <script src="~/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
    <script></script>
    <script>
        function openCreateFolderModal(parentFolderId) {
            $('#parentFolderId').val(parentFolderId);
            $('#createFolderModal').modal('show');
        }

        function openUploadFileModal(folderId) {
            $('#FolderId').val(folderId);
            $('#uploadFileModal').modal('show');
        }

        function openRenameFolderModal(folderId, folderName) {
            $('#renameFolderId').val(folderId);
            $('#renameFolderName').val(folderName);
            $('#renameFolderModal').modal('show');
        }

        function openRenameFileModal(fileId, fileName) {
            $('#renameFileId').val(fileId);
            $('#renameFileName').val(fileName);
            $('#renameFileModal').modal('show');
        }

        function DeleteFile(fileId, nivel) {
            if (confirm("¿Está seguro de que desea eliminar este archivo?")) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DeleteFile", "Student")',
                    data: { id: fileId },
                    success: function (result) {
                        if (result.success) {
                            Swal.fire({
                                icon: 'success',
                                title: '¡Éxito!',
                                text: result.message
                            }).then(function () {
                                // Eliminar el elemento correspondiente del DOM
                                $('#file-row-' + fileId).remove();

                                // Actualizar la URL y recargar la página
                                var url = new URL(window.location.href);

                                // Eliminar el parámetro 'nivel' si existe
                                url.searchParams.delete('nivel');

                                // Establecer o actualizar el parámetro 'Nivel'
                                url.searchParams.set('Nivel', nivel);

                                // Recargar la página con la nueva URL
                                window.location.href = url.toString();
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: result.message
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Ocurrió un error al intentar eliminar el archivo.'
                        });
                    }
                });
            }
        }

        function deleteFolder(folderId, nivel) {
            if (confirm("¿Está seguro de que desea eliminar esta carpeta?")) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DeleteFolder", "Student")',
                    data: { id: folderId },
                    success: function (result) {
                        if (result.success) {
                            Swal.fire({
                                icon: 'success',
                                title: '¡Éxito!',
                                text: result.message
                            }).then(function () {
                                // Eliminar el elemento correspondiente del DOM
                                $('#folder-row-' + folderId).remove(); // Actualizar el DOM eliminando la fila de la carpeta

                                // Actualizar la URL con el parámetro nivel y recargar la página
                                var url = new URL(window.location.href);
                                url.searchParams.set('Nivel', @ViewBag.id_level); // Usa el parámetro nivel pasado a la función
                                window.location.href = url.toString(); // Recargar la página con la nueva URL
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: result.message
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Ocurrió un error al intentar eliminar la carpeta.'
                        });
                    }
                });
            }
        }

        // Función para manejar el envío del formulario
        $('#renameFolderForm').submit(function (event) {
            event.preventDefault();
            $.ajax({
                url: '@Url.Action("RenameFolder", "Student")',
                type: 'POST',
                data: $(this).serialize(),
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            icon: 'success',
                            title: '¡Éxito!',
                            text: response.message
                        }).then(function () {
                            // Actualizar la vista con el nuevo nombre de la carpeta
                            var folderId = $('#renameFolderId').val();
                            var newName = $('#renameFolderName').val();
                            $('#folder-name-' + folderId).text(newName); // Actualizar el nombre en la vista
                            $('#renameFolderModal').modal('hide'); // Cerrar el modal

                            // Actualizar la URL con el nuevo parámetro nivel y recargar la página
                            var url = new URL(window.location.href);
                            url.searchParams.set('Nivel', $('#nivel').val()); // Usa el parámetro nivel desde el campo oculto
                            window.location.href = url.toString(); // Recargar la página con la nueva URL
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: response.message
                        });
                    }
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Ocurrió un error al intentar renombrar la carpeta.'
                    });
                }
            });
        });

        // Función para manejar el envío del formulario
        $('#renameFileForm').submit(function (event) {
            event.preventDefault();

            $.ajax({
                url: '@Url.Action("RenameFile", "Student")',
                type: 'POST',
                data: $(this).serialize(),
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            icon: 'success',
                            title: '¡Éxito!',
                            text: response.message
                        }).then(function () {
                            // Obtener el ID del archivo y el nuevo nombre
                            var fileId = $('#renameFileId').val();
                            var newName = $('#renameFileName').val();

                            // Actualizar el nombre en la vista
                            $('#file-name-' + fileId).text(newName); // Asegúrate de que el ID en el DOM sea correcto

                            // Cerrar el modal
                            $('#renameFileModal').modal('hide');

                            // Actualizar la URL con el parámetro nivel y recargar la página
                            var url = new URL(window.location.href);

                            // Asegúrate de que el campo oculto #nivel tenga el valor adecuado
                            var nivel = $('#nivel').val();
                            url.searchParams.set('Nivel', nivel);

                            // Recargar la página con la nueva URL
                            window.location.href = url.toString();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: response.message
                        });
                    }
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Ocurrió un error al intentar renombrar el archivo.'
                    });
                }
            });
        });
    </script>

</body>
</html>
